{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../src/transforms.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AnalyzeResult as AnalyzeResultModel,\n  DataTable as DataTableModel,\n  DocumentResult as DocumentResultModel,\n  FieldValue as FieldValueModel,\n  KeyValueElement as KeyValueElementModel,\n  KeyValuePair as KeyValuePairModel,\n  PageResult as PageResultModel,\n  ReadResult as ReadResultModel,\n  TextLine as TextLineModel,\n  GeneratedClientGetAnalyzeFormResultResponse as GetAnalyzeFormResultResponse,\n  GeneratedClientGetAnalyzeLayoutResultResponse as GetAnalyzeLayoutResultResponse,\n  GeneratedClientGetCustomModelResponse as GetCustomModelResponse,\n  SelectionMark,\n  TrainResult,\n  KeysResult,\n  Attributes\n} from \"./generated/models\";\n\nimport {\n  FormPage,\n  FormLine,\n  FormElement,\n  FormTable,\n  RecognizedForm,\n  FieldData,\n  FormField,\n  Point2D,\n  FormModelResponse,\n  CustomFormModelField,\n  CustomFormSubmodel,\n  RecognizedFormArray,\n  FormSelectionMark,\n  TrainingDocumentInfo,\n  CustomFormModelProperties\n} from \"./models\";\nimport { RecognizeContentResultResponse } from \"./internalModels\";\n\nfunction toBoundingBox(original: number[]): Point2D[] {\n  return [\n    { x: original[0], y: original[1] },\n    { x: original[2], y: original[3] },\n    { x: original[4], y: original[5] },\n    { x: original[6], y: original[7] }\n  ];\n}\n\nexport function toTextLine(original: TextLineModel, pageNumber: number): FormLine {\n  const appearance =\n    original.appearance !== undefined\n      ? {\n          styleName: original.appearance.style.name,\n          styleConfidence: original.appearance.style.confidence\n        }\n      : undefined;\n\n  const line: FormLine = {\n    kind: \"line\",\n    pageNumber,\n    text: original.text,\n    boundingBox: toBoundingBox(original.boundingBox),\n    appearance,\n    words: original.words.map((w) => {\n      return {\n        kind: \"word\",\n        text: w.text,\n        boundingBox: toBoundingBox(w.boundingBox),\n        confidence: w.confidence || 1,\n        pageNumber\n      };\n    })\n  };\n\n  return line;\n}\n\nexport function toSelectionMark(original: SelectionMark, pageNumber: number): FormSelectionMark {\n  return {\n    kind: \"selectionMark\",\n    pageNumber,\n    boundingBox: toBoundingBox(original.boundingBox),\n    confidence: original.confidence,\n    state: original.state\n  };\n}\n\nexport function toFormPage(original: ReadResultModel): FormPage {\n  return {\n    pageNumber: original.pageNumber,\n    textAngle: original.angle,\n    width: original.width,\n    height: original.height,\n    unit: original.unit,\n    lines: original.lines?.map((l) => toTextLine(l, original.pageNumber)),\n    selectionMarks: original.selectionMarks?.map((m) => toSelectionMark(m, original.pageNumber))\n  };\n}\n\n// Note: might need to support other element types in future, e.g., checkbox\nconst textPattern = /\\/readResults\\/(\\d+)\\/lines\\/(\\d+)(?:\\/words\\/(\\d+))?/;\n\nexport function toFormContent(element: string, readResults: FormPage[]): FormElement {\n  const result = textPattern.exec(element);\n  if (!result || !result[0] || !result[1] || !result[2]) {\n    throw new Error(`Unexpected element reference encountered: ${element}`);\n  }\n\n  const readIndex = Number.parseInt(result[1]);\n  const lineIndex = Number.parseInt(result[2]);\n  if (result[3]) {\n    const wordIndex = Number.parseInt(result[3]);\n    return readResults[readIndex].lines![lineIndex].words[wordIndex];\n  } else {\n    return readResults[readIndex].lines![lineIndex];\n  }\n}\n\nexport function toFieldData(\n  pageNumber: number,\n  original: KeyValueElementModel,\n  readResults?: FormPage[]\n): FieldData {\n  return {\n    pageNumber,\n    text: original.text,\n    boundingBox: original.boundingBox ? toBoundingBox(original.boundingBox) : undefined,\n    fieldElements: original.elements?.map((element) => toFormContent(element, readResults!))\n  };\n}\n\nexport function toFormFieldFromKeyValuePairModel(\n  pageNumber: number,\n  original: KeyValuePairModel,\n  readResults?: FormPage[]\n): FormField {\n  return {\n    name: original.label,\n    confidence: original.confidence || 1,\n    labelData: toFieldData(pageNumber, original.key, readResults),\n    valueData: toFieldData(pageNumber, original.value, readResults),\n    value: original.value.text,\n    valueType: \"string\"\n  };\n}\n\nexport function toFormTable(\n  original: DataTableModel,\n  readResults: FormPage[],\n  pageNumber: number\n): FormTable {\n  return {\n    rowCount: original.rows,\n    columnCount: original.columns,\n    boundingBox: original.boundingBox ? toBoundingBox(original.boundingBox) : undefined,\n    cells: original.cells.map((cell) => ({\n      boundingBox: toBoundingBox(cell.boundingBox),\n      columnIndex: cell.columnIndex,\n      fieldElements: cell.elements?.map((element) => toFormContent(element, readResults)),\n      rowIndex: cell.rowIndex,\n      columnSpan: cell.columnSpan ?? 1,\n      rowSpan: cell.rowSpan ?? 1,\n      isHeader: cell.isHeader ?? false,\n      isFooter: cell.isFooter ?? false,\n      confidence: cell.confidence ?? 1,\n      text: cell.text,\n      pageNumber\n    })),\n    pageNumber\n  };\n}\n\nexport function toFormPages(\n  readResults?: ReadResultModel[],\n  pageResults?: PageResultModel[]\n): FormPage[] {\n  const transformed = readResults?.map(toFormPage);\n  // maps from page numbers to the objects\n  const pageMap = new Map<number, PageResultModel>(pageResults?.map((r) => [r.pageNumber, r]));\n  return (\n    transformed?.map((page) => {\n      const { pageNumber } = page;\n      const pageResult = pageMap.get(pageNumber);\n      return {\n        ...page,\n        tables:\n          pageResult?.tables?.map((table) => toFormTable(table, transformed, pageNumber)) ?? []\n      };\n    }) ?? []\n  );\n}\n\nexport function toRecognizedFormArray(\n  original: GetAnalyzeFormResultResponse,\n  expectedDocTypePrefix?: string\n): RecognizedFormArray {\n  const pages = toFormPages(\n    original.analyzeResult?.readResults,\n    original.analyzeResult?.pageResults\n  );\n\n  if (original.analyzeResult?.documentResults?.length) {\n    // supervised/prebuilt results come from documentResults\n    return (\n      original.analyzeResult?.documentResults\n        ?.filter((d) => !!d.fields)\n        ?.map((d) => {\n          if (expectedDocTypePrefix !== undefined && !d.docType.startsWith(expectedDocTypePrefix)) {\n            throw new RangeError(\n              `Expected document type to start with '${expectedDocTypePrefix}', but found '${d.docType}'.`\n            );\n          }\n          return toRecognizedForm(d, pages);\n        }) ?? []\n    );\n  } else {\n    // unsupervised results from from pageResults;\n    return original.analyzeResult?.pageResults?.map((p) => toFormFromPageResult(p, pages)) ?? [];\n  }\n}\n\nexport function toFormFieldFromFieldValueModel(\n  original: FieldValueModel,\n  key: string,\n  readResults: FormPage[]\n): FormField {\n  let value:\n    | string\n    | Date\n    | number\n    | FormField[]\n    | { [propertyName: string]: FormField }\n    | undefined;\n\n  function unreachable(v: never): never {\n    throw new Error(`Encountered unknown field value type: ${v}`);\n  }\n\n  switch (original.type) {\n    case \"string\":\n      value = original.valueString;\n      break;\n    case \"date\":\n      value = original.valueDate;\n      break;\n    case \"time\":\n      value = original.valueTime;\n      break;\n    case \"integer\":\n      value = original.valueInteger;\n      break;\n    case \"number\":\n      value = original.valueNumber;\n      break;\n    case \"phoneNumber\":\n      value = original.valuePhoneNumber;\n      break;\n    case \"selectionMark\":\n      value = original.valueSelectionMark;\n      break;\n    case \"array\":\n      value = original.valueArray?.map((fieldValueModel) =>\n        toFormFieldFromFieldValueModel(fieldValueModel, key, readResults)\n      );\n      break;\n    case \"object\":\n      value = original.valueObject\n        ? toFieldsFromFieldValue(original.valueObject, readResults)\n        : undefined;\n      break;\n    case \"countryRegion\":\n      value = original.valueCountryRegion;\n      break;\n    default:\n      return unreachable(original.type);\n  }\n  return {\n    confidence: original.confidence || 1,\n    name: key,\n    valueData: {\n      pageNumber: original.pageNumber ?? 0,\n      text: original.text,\n      boundingBox: original.boundingBox ? toBoundingBox(original.boundingBox) : undefined,\n      fieldElements: original.elements?.map((element) => toFormContent(element, readResults))\n    },\n    valueType: original.type,\n    value\n  } as FormField;\n}\n\nexport function toFieldsFromFieldValue(\n  original: { [propertyName: string]: FieldValueModel | null },\n  readResults: FormPage[]\n): { [propertyName: string]: FormField } {\n  const result: { [propertyName: string]: FormField } = {};\n  for (const key in original) {\n    if (Object.prototype.hasOwnProperty.call(original, key)) {\n      if (!original[key]) {\n        result[key] = { name: key };\n        continue;\n      }\n      const formField = toFormFieldFromFieldValueModel(original[key]!, key, readResults);\n      result[key] = formField;\n    }\n  }\n\n  return result;\n}\n\nexport function toFieldsFromKeyValuePairs(\n  pageNumber: number,\n  original: KeyValuePairModel[],\n  pages: FormPage[]\n): { [propertyName: string]: FormField } {\n  const result: { [propertyName: string]: FormField } = {};\n  for (let i = 0; i < original.length; i++) {\n    const pair = original[i];\n    const stringField = toFormFieldFromKeyValuePairModel(pageNumber, pair, pages);\n    stringField.name = stringField.name || `field-${i}`;\n\n    result[`field-${i}`] = stringField;\n  }\n\n  return result;\n}\n\nexport function toFormFromPageResult(original: PageResultModel, pages: FormPage[]): RecognizedForm {\n  return {\n    formType: `form-${original.clusterId}`,\n    pageRange: { firstPageNumber: original.pageNumber, lastPageNumber: original.pageNumber },\n    pages: pages.filter((p) => p.pageNumber === original.pageNumber),\n    fields: original.keyValuePairs\n      ? toFieldsFromKeyValuePairs(original.pageNumber, original.keyValuePairs, pages)\n      : {}\n  };\n}\n\nexport function toRecognizedForm(original: DocumentResultModel, pages: FormPage[]): RecognizedForm {\n  return {\n    formType: original.docType,\n    formTypeConfidence: original.docTypeConfidence,\n    modelId: original.modelId,\n    pageRange: { firstPageNumber: original.pageRange[0], lastPageNumber: original.pageRange[1] },\n    fields: toFieldsFromFieldValue(original.fields, pages),\n    pages: pages.filter(\n      (p) => original.pageRange[0] <= p.pageNumber && p.pageNumber <= original.pageRange[1]\n    )\n  };\n}\n\nexport function toRecognizeContentResultResponse(\n  original: GetAnalyzeLayoutResultResponse\n): RecognizeContentResultResponse {\n  function toRecognizeContentResult(\n    model?: AnalyzeResultModel\n  ): { version?: string; pages?: FormPage[] } | undefined {\n    if (!model) {\n      return undefined;\n    }\n    const pages = toFormPages(model.readResults, model.pageResults);\n    return {\n      version: model.version,\n      pages: pages\n    };\n  }\n\n  const common = {\n    status: original.status,\n    createdOn: original.createdOn,\n    errors: original.analyzeResult?.errors,\n    lastModified: original.lastModified,\n    _response: original._response\n  };\n  if (original.status === \"succeeded\") {\n    return {\n      ...common,\n      ...toRecognizeContentResult(original.analyzeResult)\n    };\n  } else {\n    return common;\n  }\n}\n\nfunction flattenTrainingDocuments(\n  original: GetCustomModelResponse\n): TrainingDocumentInfo[] | undefined {\n  if (original.composedTrainResults) {\n    // Composed model, need to zip the training documents into a flat array and add modelID correlation.\n    const mappedResultDocuments = original.composedTrainResults.map((innerResult) =>\n      innerResult.trainingDocuments.map((info) => ({\n        ...info,\n        modelId: innerResult.modelId,\n        errors: info.errors ?? []\n      }))\n    );\n\n    return ([] as TrainingDocumentInfo[]).concat(...mappedResultDocuments);\n  } else if (original.trainResult) {\n    // Normal training scenario with only one trainResult\n    return original.trainResult.trainingDocuments.map((info) => ({\n      ...info,\n      modelId: original.modelInfo.modelId,\n      errors: info.errors ?? []\n    }));\n  }\n\n  return undefined;\n}\n\nfunction toSubmodelsFromComposedTrainResults(results: TrainResult[]): CustomFormSubmodel[] {\n  const mappedSubmodels = results.map((r) => toSubmodelsFromTrainResultLabeled(r));\n\n  // Flatten the array\n  return ([] as CustomFormSubmodel[]).concat(...mappedSubmodels);\n}\n\nfunction toSubmodelsFromTrainResultLabeled(\n  result: TrainResult,\n  modelName?: string\n): CustomFormSubmodel[] {\n  return [\n    {\n      modelId: result.modelId,\n      accuracy: result.averageModelAccuracy,\n      formType: `custom:${modelName ?? result.modelId}`,\n      fields:\n        result.fields?.reduce((fields, field) => {\n          fields[field.fieldName] = {\n            name: field.fieldName,\n            accuracy: field.accuracy,\n            label: null\n          };\n          return fields;\n        }, {} as Record<string, CustomFormModelField>) ?? {}\n    }\n  ];\n}\n\nfunction toSubmodelsFromTrainResultUnlabeled(\n  keys: KeysResult,\n  modelId: string\n): CustomFormSubmodel[] {\n  // Each cluster becomes a submodel\n  return Object.entries(keys.clusters).map(\n    ([clusterKey, cluster]): CustomFormSubmodel => ({\n      modelId,\n      // Create formType from the key of the cluster\n      formType: `form-${clusterKey}`,\n      // Roll the fields up into the correct shape\n      fields: cluster.reduce((fields, label, idx) => {\n        fields[`field-${idx}`] = {\n          name: `field-${idx}`,\n          label\n        };\n        return fields;\n      }, {} as Record<string, CustomFormModelField>)\n    })\n  );\n}\n\nfunction flattenCustomFormSubmodels(\n  original: GetCustomModelResponse\n): CustomFormSubmodel[] | undefined {\n  if (original.modelInfo.status === \"ready\") {\n    if (original.composedTrainResults !== undefined) {\n      return toSubmodelsFromComposedTrainResults(original.composedTrainResults);\n    } else if (original.trainResult?.fields || original.trainResult?.averageModelAccuracy) {\n      return toSubmodelsFromTrainResultLabeled(original.trainResult, original.modelInfo.modelName);\n    } else if (original.keys) {\n      return toSubmodelsFromTrainResultUnlabeled(original.keys, original.modelInfo.modelId);\n    } else {\n      throw new Error(\"No submodel information was found in the training response.\");\n    }\n  }\n  return undefined;\n}\n\nexport function toCustomFormModelProperties(\n  original: Attributes | undefined\n): CustomFormModelProperties | undefined {\n  if (original) {\n    return {\n      isComposedModel: original.isComposed\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport function toFormModelResponse(response: GetCustomModelResponse): FormModelResponse {\n  return {\n    status: response.modelInfo.status,\n    modelId: response.modelInfo.modelId,\n    modelName: response.modelInfo.modelName,\n    trainingStartedOn: response.modelInfo.trainingStartedOn,\n    trainingCompletedOn: response.modelInfo.trainingCompletedOn,\n    trainingDocuments: flattenTrainingDocuments(response),\n    properties: toCustomFormModelProperties(response.modelInfo.attributes),\n    errors: response.trainResult?.errors,\n    submodels: flattenCustomFormSubmodels(response),\n    _response: response._response\n  };\n}\n"]}