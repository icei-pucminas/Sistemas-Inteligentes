{"version":3,"file":"pageBlob.js","sourceRoot":"","sources":["../../../../../../src/generated/src/operations/pageBlob.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a PageBlob. */\nexport class PageBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a PageBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCreateResponse>\n   */\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams): Promise<Models.PageBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, options: Models.PageBlobCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        blobContentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.PageBlobCreateResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesResponse>\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams): Promise<Models.PageBlobUploadPagesResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.PageBlobUploadPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadPagesOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesResponse>;\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobClearPagesResponse>\n   */\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams): Promise<Models.PageBlobClearPagesResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, options: Models.PageBlobClearPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      clearPagesOperationSpec,\n      callback) as Promise<Models.PageBlobClearPagesResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read\n   * from a URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesFromURLResponse>\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams): Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options: Models.PageBlobUploadPagesFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sourceUrl,\n        sourceRange,\n        contentLength,\n        range,\n        options\n      },\n      uploadPagesFromURLOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot\n   * of a page blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesResponse>\n   */\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams): Promise<Models.PageBlobGetPageRangesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRanges(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRanges(options: Models.PageBlobGetPageRangesOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesResponse>;\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that\n   * were changed between target blob and previous snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesDiffResponse>\n   */\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams): Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRangesDiff(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRangesDiff(options: Models.PageBlobGetPageRangesDiffOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesDiffOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobResizeResponse>\n   */\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams): Promise<Models.PageBlobResizeResponse>;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, options: Models.PageBlobResizeOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blobContentLength,\n        options\n      },\n      resizeOperationSpec,\n      callback) as Promise<Models.PageBlobResizeResponse>;\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUpdateSequenceNumberResponse>\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams): Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options: Models.PageBlobUpdateSequenceNumberOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sequenceNumberAction,\n        options\n      },\n      updateSequenceNumberOperationSpec,\n      callback) as Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page\n   * blob. The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination. The copied snapshots are complete copies of\n   * the original snapshot and can be read or copied from as usual. This API is supported since REST\n   * version 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCopyIncrementalResponse>\n   */\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams): Promise<Models.PageBlobCopyIncrementalResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, options: Models.PageBlobCopyIncrementalOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyIncrementalOperationSpec,\n      callback) as Promise<Models.PageBlobCopyIncrementalResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.tier0,\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobTagsString,\n    Parameters.blobType0,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp17\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.range0,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst clearPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp17\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.range0,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite1,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp17\n  ],\n  headerParameters: [\n    Parameters.sourceUrl,\n    Parameters.sourceRange0,\n    Parameters.sourceContentMD5,\n    Parameters.sourceContentCrc64,\n    Parameters.contentLength,\n    Parameters.range1,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.comp18\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesDiffOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.prevsnapshot,\n    Parameters.comp18\n  ],\n  headerParameters: [\n    Parameters.prevSnapshotUrl,\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst resizeOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst updateSequenceNumberOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.sequenceNumberAction,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyIncrementalOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp19\n  ],\n  headerParameters: [\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n"]}